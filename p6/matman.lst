     1                                  ; NAME: 	Louisa Houser
     2                                  ; Assignment:	Program 6 - Matrix Management
     3                                  ; Purpose: 	Given a matrix, go through the rows and columns and add each value and then take the RowSums and ColSums, and add the value to a grand sum.
     4                                  ; Date:		10/27/23
     5                                  
     6                                  ;ROWS: EQU 3
     7                                  ;COLS: EQU 2
     8                                  
     9                                  ROWS: EQU 5
    10                                  COLS: EQU 7
    11                                  
    12                                  SECTION .data
    13                                  ; define data/variables here.  Think DB, DW, DD, DQ
    14                                  
    15                                  ;MyMatrix: 	dd	1,   2
    16                                  ;	    	dd	4,   -2
    17                                  ;		dd     -10,  8
    18                                  
    19 00000000 010000000200000003-     MyMatrix: 	dd	 1,  2,  3,  4,  5,  6,  7
    20 00000009 000000040000000500-
    21 00000012 000006000000070000-
    22 0000001B 00                 
    23 0000001C 08000000090000000A-     	    	dd	 8,  9, 10, 11, 12, 13, 14
    24 00000025 0000000B0000000C00-
    25 0000002E 00000D0000000E0000-
    26 00000037 00                 
    27 00000038 0F0000001000000011-     		dd	15, 16, 17, 18, 19, 20, 21
    28 00000041 000000120000001300-
    29 0000004A 000014000000150000-
    30 00000053 00                 
    31 00000054 160000001700000018-     		dd	22, 23, 24, 25, 26, 27, 28
    32 0000005D 000000190000001A00-
    33 00000066 00001B0000001C0000-
    34 0000006F 00                 
    35 00000070 1D0000001E0000001F-     		dd	29, 30, 31, 32, 33, 34, 35
    36 00000079 000000200000002100-
    37 00000082 000022000000230000-
    38 0000008B 00                 
    39                                  
    40                                  SECTION .bss
    41                                  ; define uninitialized data here
    42                                  
    43 00000000 <res 00000014>          RowSums: RESD ROWS
    44 00000014 <res 0000001C>          ColSums: RESD COLS
    45 00000030 <res 00000004>          Sum: 	 RESD 1
    46                                  
    47                                  SECTION .text
    48                                  global _main
    49                                  _main:
    50                                  
    51                                  ;--------------------------------------------------------------
    52                                  ; ADD UP ROWS AND COLUMNS
    53                                  ;--------------------------------------------------------------
    54                                  
    55 00000000 B905000000              mov ecx, ROWS ; ecx holds rows size
    56                                  
    57 00000005 31C0                    xor eax, eax  ; set eax register to 0
    58 00000007 31D2                    xor edx, edx  ; set edx register to 0
    59 00000009 31F6                    xor esi, esi  ; set esi register to 0
    60 0000000B 31FF                    xor edi, edi  ; set edi register to 0
    61                                  
    62                                  rowLoop:
    63 0000000D 89C8                    	mov eax, ecx				; save ecx value in eax
    64 0000000F B907000000              	mov ecx, COLS			 	; move rows size into ecx for colLoop	
    65 00000014 31DB                    	xor ebx, ebx				; empty ebx before entering rowLoop
    66                                  	colLoop:
    67 00000016 8BBE[00000000]          		mov edi, [MyMatrix + esi]	; move mm value into edi 
    68 0000001C 01BA[00000000]          		add [RowSums + edx], edi   	; edx holds place of row sum
    69 00000022 01BB[14000000]          		add [ColSums + ebx], edi   	; ebx holds place of col sum
    70 00000028 013D[30000000]          		add [Sum], edi			; increase total of whole matrix
    71 0000002E 83C304                  		add ebx, 4			; increase ColSum value
    72 00000031 83C604                                  add esi, 4                      ; increase placement in entire array by 4 because 
    73 00000034 E2E0                    		loop colLoop 			; decrement ecx, if != 0, go to colLoop
    74 00000036 83C204                  	add edx, 4				; go to next value in RowSums array
    75 00000039 89C1                    	mov ecx, eax				; move the old ecx value back into ecx
    76 0000003B E2D0                    	loop rowLoop				; decrement ecx, if != 0, go to rowLoop
    77                                  
    78                                  
    79                                  lastBreak:
    80                                  
    81                                  
    82                                  ;-----------------------------------
    83                                  
    84                                  
    85                                  
    86                                  
    87                                  ; Normal termination code
    88 0000003D B801000000              mov eax, 1
    89 00000042 BB00000000              mov ebx, 0
    90 00000047 CD80                    int 80h
    91                                  
