     1                                  ; NAME : Louisa Houser
     2                                  ; Assignment : Program 4 - Fibonacci Sequence
     3                                  ; Date : October 11, 2023
     4                                  ; Etc...
     5                                  
     6                                  SECTION .data
     7                                  ; define data/variables here.  Think DB, DW, DD, DQ
     8                                  
     9                                  SECTION .bss
    10                                  ; define uninitialized data here
    11                                  
    12 00000000 <res 00000040>          Fibs:   RESD 16    ; unitialized array of size double words
    13                                  
    14                                  
    15                                  
    16                                  SECTION .text
    17                                  global _main
    18                                  _main:
    19                                  
    20                                  ; put your code here.
    21 00000000 B800000000              mov eax, 0
    22 00000005 A3[00000000]            mov [Fibs], eax      ; assign 0 to location of index 0
    23 0000000A B801000000              mov eax, 1
    24 0000000F A3[04000000]            mov [Fibs + 4], eax  ; assign 1 to location of index 1
    25 00000014 B800000000              mov eax, 0           ; assign 0 to eax before loop begins
    26                                  
    27 00000019 B902000000              mov ecx, 2
    28                                  fibonacciLoop:
    29 0000001E 8B98[00000000]              mov ebx, [Fibs + eax]   ; move current value into ebx 
    30 00000024 83E804                      sub eax, 4
    31 00000027 0398[00000000]              add ebx, [Fibs + eax]
    32 0000002D 83C008                      add eax, 8              ; increase eax by 4
    33 00000030 0198[00000000]              add [Fibs + eax], ebx   ; add value of ebx to new current value
    34 00000036 83C101                      add ecx, 1
    35 00000039 83F910                      cmp ecx, 16
    36 0000003C 7EE0                        jle fibonacciLoop      ; loop again
    37                                  
    38                                  lastBreak:
    39                                  ; Normal termination code
    40 0000003E B801000000              mov eax, 1
    41 00000043 BB00000000              mov ebx, 0
    42 00000048 CD80                    int 80h
    43                                  
